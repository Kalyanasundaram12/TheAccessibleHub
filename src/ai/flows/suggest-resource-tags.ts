
// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview A flow that suggests relevant tags for resources based on their content or description.
 *
 * - suggestResourceTags - A function that suggests tags for a given resource description.
 * - SuggestResourceTagsInput - The input type for the suggestResourceTags function.
 * - SuggestResourceTagsOutput - The return type for the suggestResourceTags function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestResourceTagsInputSchema = z.object({
  resourceDescription: z
    .string()
    .describe('The content or description of the resource.'),
});
export type SuggestResourceTagsInput = z.infer<typeof SuggestResourceTagsInputSchema>;

const SuggestResourceTagsOutputSchema = z.object({
  tags: z
    .array(z.string())
    .describe('An array of suggested tags for the resource.'),
});
export type SuggestResourceTagsOutput = z.infer<typeof SuggestResourceTagsOutputSchema>;

export async function suggestResourceTags(input: SuggestResourceTagsInput): Promise<SuggestResourceTagsOutput> {
  return suggestResourceTagsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestResourceTagsPrompt',
  input: {schema: SuggestResourceTagsInputSchema},
  output: {schema: SuggestResourceTagsOutputSchema},
  prompt: `You are an expert in categorizing resources for an AI community.

  Based on the following resource description, suggest a list of relevant tags that can help users easily find the resource.

  Resource Description: {{{resourceDescription}}}

  Please return the tags as an array of strings.`,
});

const suggestResourceTagsFlow = ai.defineFlow(
  {
    name: 'suggestResourceTagsFlow',
    inputSchema: SuggestResourceTagsInputSchema,
    outputSchema: SuggestResourceTagsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    if (!output) {
      console.warn('AI did not produce valid output for suggestResourceTagsFlow. Returning empty tags.');
      return { tags: [] };
    }
    return output;
  }
);
